name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build_artifacts:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.runner_os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            runner_os: ubuntu-latest
            command: both
          - target: aarch64-apple-darwin
            runner_os: macOS-latest
            command: build
          - target: x86_64-unknown-linux-gnu
            runner_os: ubuntu-latest
            command: both
          - target: x86_64-apple-darwin
            runner_os: macos-latest
            command: both
          - target: i686-unknown-linux-gnu
            runner_os: ubuntu-latest
            command: both

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check crate version
        id: version
        run: |
          VERSION=$(grep -n 1 -oP 'version = "\K[^"]+' crates/wb/Cargo.toml)
          if [ "$VERSION" != "${GITHUB_REF/refs\/tags\/v/}" ]; then
            echo "error: version mismatch between Cargo.toml and Git tag: $VERSION != ${GITHUB_REF/refs\/tags\/v/}"
            exit 1
          fi

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build artifact
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.command }}
          target: ${{ matrix.target }}
          toolchain: stable
          args: --locked --release
          strip: true

      - name: Package
        run: |
          RELEASE_DIR="target/${{ matrix.target }}/release"

          if [ ! -d "$RELEASE_DIR" ]; then
            echo "error: release directory not found: $RELEASE_DIR"
            exit 1
          fi

          tar czvf workbench-0.1.0-${{ matrix.target }}.tar.gz $RELEASE_DIR/wb LICENSE.txt

      - name: Create a release in GitHub
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          files: "workbench-${{ steps.version.outputs.VERSION }}-${{ matrix.target }}.tar.gz"
